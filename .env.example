# App Config for API
## This is the path to the JSON config file that the server will register during startup.
## It can be a relative path like "config/projects/testing_config.json" or an absolute path to any json file within the repository folder.
PROJECT_CONFIG_PATH=config/projects/testing_config.json #REPLACE
## This is the API key for the server. You can set it to whatever you want, but it should be kept secret.
API_KEY=your_api_key #REPLACE
PORT=8000
LOG_LEVEL=INFO
ENV=development # Set to production for production use
## These are settings to turn on or off certain features of the server.
### Set to true to allow dynamic registration of components (clients, agents, etc.) via API.
AURITE_ALLOW_DYNAMIC_REGISTRATION=true
USE_SECRETS_MANAGER=false # Set to true for GCP secrets manager integration
AURITE_ENABLE_DB=false # Set to true to enable DB persistence for configs/history (requires postgres variables below)

## LLM Gateway
ENABLE_GATEWAY=true # Set to true if you want to use the LiteLLM Gateway (default true)
# Disabling the gateway will only allow use of non-streamed Anthropic, OpenAI, and Google models

## LLM API Keys
ANTHROPIC_API_KEY=anthropic_key #REPLACE
OPENAI_API_KEY=openai_key #REPLACE
GOOGLE_API_KEY=google_key #REPLACE
# Add any other LiteLLM supported LLM API keys here

# Aurite Storage DB (Optional Persistence)
# For the backend service running inside Docker to connect to the postgres Docker service,
# AURITE_DB_HOST should be the service name 'postgres'.
AURITE_DB_HOST=postgres
AURITE_DB_PORT=5432 # This is the internal port for PostgreSQL service inside Docker
AURITE_DB_USER=postgres_user # REPLACE
AURITE_DB_PASSWORD=postgres_password # REPLACE
AURITE_DB_NAME=aurite_storage # REPLACE (or use a default)

## Optional Redis variables only needed if you plan to use the Worker (instead of the API or CLI)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

## Optional Encryption Key
## If left blank, a key will be auto-generated on startup.
## IMPORTANT: For any persistent deployment or if you plan to use features that
## rely on encrypted storage, set this to a strong, persistent, URL-safe base64-encoded 32-byte key.
## See SECURITY.md for more details on generating and managing this key.
# AURITE_MCP_ENCRYPTION_KEY=


## Optional MCP Server Variables
## These variables are not needed for the framework, but are needed for common MCP servers used in project files.
## Mem0
MEM0_HOST=localhost
MEM0_USER=mcp_user
MEM0_PASSWORD=mem0_password # REPLACE
MEM0_PORT=5432

## Smithery
SMITHERY_API_KEY=your_api_key