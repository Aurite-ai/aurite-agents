name: Test Build

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install Python dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Run Python tests
      run: poetry run pytest tests/unit/ -v
    
    - name: Build frontend assets
      run: python scripts/build_frontend_for_package.py
    
    - name: Test static asset detection
      run: python scripts/test_static_detection.py
    
    - name: Test package build
      run: |
        poetry build
        python -m zipfile -l dist/aurite-*.whl | grep "studio/static/index.html"
    
    - name: Test wheel installation
      run: python scripts/test_wheel_install.py
    
    - name: Check package size
      run: |
        echo "Package sizes:"
        ls -lh dist/aurite-*.whl dist/aurite-*.tar.gz
        echo "Wheel should be > 2MB (includes static assets)"
        stat -c%s dist/aurite-*.whl | awk '{if($1 > 2000000) print "✅ Wheel size OK: " $1/1024/1024 " MB"; else print "❌ Wheel too small: " $1/1024/1024 " MB"}'
