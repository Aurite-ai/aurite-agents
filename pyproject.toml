[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
[project]
name = "aurite-agents"
version = "0.2.0"
description = "Aurite Agent Framework with MCP"
readme = "README.md"
requires-python = ">=3.12"

authors = [
    { name = "Ryan W", email = "ryan@aurite.ai" },
    { name = "Blake R", email = "blake@aurite.ai" },
    { name = "Patrick W", email = "patrick@aurite.ai" },
]

license-files = ["LICENSE"] # Use recommended field

keywords = ["ai", "agent", "mcp", "framework", "llm", "anthropic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "mcp>=1.4.1",
    "httpx>=0.28.1",
    "anyio>=4.8.0",
    "sqlalchemy>=2.0.39",
    "anthropic>=0.49.0",
    "annotated-types>=0.7.0",
    "certifi>=2025.1.31",
    "cffi>=1.17.1",
    "click>=8.1.8",
    "cryptography>=44.0.2",
    "distro>=1.9.0",
    "greenlet>=3.1.1",
    "h11>=0.14.0",
    "httpcore>=1.0.7",
    "httpx-sse>=0.4.0",
    "idna>=3.10",
    "iniconfig>=2.0.0",
    "jiter>=0.9.0",
    "mem0ai>=0.0.9",
    "numpy>=2.2.3",
    "packaging>=24.2",
    "pandas>=2.2.3",
    "pluggy>=1.5.0",
    "psycopg2-binary>=2.9.10",
    "pycparser>=2.22",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "pydantic_core>=2.27.2",
    "pydub>=0.25.1",
    "PyMySQL>=1.1.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "python-dateutil>=2.9.0.post0",
    "python-dotenv>=1.0.1",
    # "click-async", # Removed - unnecessary with Click 8+/Typer 0.4+
    "pytz>=2025.1",
    "redis>=5.0.0",                 # Added for worker entrypoint
    "six>=1.17.0",
    "sniffio>=1.3.1",
    "sse-starlette>=2.2.1",
    "starlette>=0.46.1",
    "typing_extensions>=4.12.2",
    "typer>=0.12.0",                # Added for CLI entrypoint
    "tzdata>=2025.1",
    "uvicorn>=0.34.0",
    "fastapi",
    "google-cloud-secret-manager>=2.19.0", # Added for GCP Secrets
]

[project.optional-dependencies]
dev = [
    "pytest-timeout>=2.3.1", # Added for test timeouts
]

[tool.setuptools.package-data]
# Include py.typed for all packages found
"*" = ["py.typed"]
# Specifically include the packaged server scripts within the 'src' package
"src" = ["packaged_servers/*.py"]

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
namespaces = false
# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
log_cli = true
log_cli_level = "INFO"
# Ensure unit, integration, e2e markers are defined
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (component interaction)",
    "e2e: marks tests as end-to-end tests (may require external resources)",
    "asyncio: mark test as async test",                                      # Keep existing
    "core: mark test as core functionality test",                            # Keep existing
    "user: mark test as requiring user credentials",
    "extended: mark test as extended functionality test",
    "agent: mark test as agent test",
    "infrastructure: mark test as infrastructure/setup verification",
    "evaluation: mark test as agent evaluation test",
    "rubric: mark test that uses an evaluation rubric",
    "multirun: mark test that runs multiple evaluation iterations",
    "benchmark: mark test that compares against benchmarks",                 # Keep existing
]
pythonpath = [".", "src"]
# Ensure asyncio_mode is set and default scope is function
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::RuntimeWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestUnknownMarkWarning",
    "ignore::pytest.PytestConfigWarning",
    "ignore::pytest.PytestUnhandledCoroutineWarning",
]
# Add HTML and JSON report options
addopts = "--verbose --no-header --disable-warnings"
# Configure test result captures
junit_family = "xunit2"
# asyncio_mode moved up
timeout = 30 # Default test timeout in seconds

[project.scripts]
start-api = "src.bin.api:start"
start-worker = "src.bin.worker:start" # Point to the synchronous wrapper
run-cli = "src.bin.cli:app" # Makes 'run-cli' command available; args must be added manually
# test-api = "newman run tests/api/main_server.postman_collection.json -e tests/api/main_server.postman_environment.json --reporters cli"
