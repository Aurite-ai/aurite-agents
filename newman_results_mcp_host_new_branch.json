{
  "collection": {
    "_": {
      "postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e"
    },
    "item": [
      {
        "id": "3111d2ef-d019-4907-adb4-6bdbbfa85c19",
        "name": "Get Host Status",
        "request": {
          "url": {
            "path": [
              "host",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8a9a32ae-fc28-42fd-8567-707af925b81a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response body has correct status\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.status).to.eql('active');",
                "});",
                "pm.test(\"Response body has tool_count\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.tool_count).to.be.a('number');",
                "});"
              ],
              "_lastExecutionId": "df90050a-3016-42ae-b9e9-9d3277c09f06"
            }
          }
        ]
      },
      {
        "id": "500be401-4012-4871-95f7-c51d2e6af86b",
        "name": "List Tools",
        "request": {
          "url": {
            "path": [
              "host",
              "tools"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "407a7f38-645e-47f1-ad8f-6c269e1886a6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response body is an array\", function () {",
                "    pm.response.to.be.withBody;",
                "    pm.response.to.be.json;",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "c5d990d0-ee7b-4ffe-a9a9-9b4c1ca08ae2"
            }
          }
        ]
      },
      {
        "id": "2187da33-61bf-439b-95e6-98a86455d802",
        "name": "Register Weather Server By Name",
        "request": {
          "url": {
            "path": [
              "host",
              "register",
              "weather_server"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0a5fcb48-247e-45ce-90b8-2b13e1748e18",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response body has correct status\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.status).to.eql('success');",
                "    pm.expect(jsonData.name).to.eql('weather_server');",
                "});"
              ],
              "_lastExecutionId": "68a9fcc0-80b4-420e-a554-6bbe59331d0b"
            }
          }
        ]
      },
      {
        "id": "b85aaf6a-9d8f-43ce-bba5-83ce0c511a29",
        "name": "Call Weather Lookup Tool",
        "request": {
          "url": {
            "path": [
              "host",
              "tools",
              "weather_lookup",
              "call"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d58bcba9-cee8-4458-bc50-1f63ea9ab548",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response body has correct content\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.content[0].text).to.include('Weather for San Francisco');",
                "});"
              ],
              "_lastExecutionId": "4f02586f-e862-4ca1-b42c-a24d18a040ca"
            }
          }
        ]
      },
      {
        "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
        "name": "Unregister Weather Server",
        "request": {
          "url": {
            "path": [
              "host",
              "servers",
              "weather_server"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response body has correct status\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.status).to.eql('success');",
                "    pm.expect(jsonData.name).to.eql('weather_server');",
                "});"
              ],
              "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
            }
          }
        ]
      },
      {
        "id": "abeca92a-d43d-44e2-ace2-b2f19ed67d7f",
        "name": "Call Weather Lookup Tool (After Unregister)",
        "request": {
          "url": {
            "path": [
              "host",
              "tools",
              "weather_lookup",
              "call"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "{{api_key}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "246afd52-df42-4865-83aa-681a28f1dcd2",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 404\", function () {",
                "    pm.response.to.have.status(404);",
                "});"
              ],
              "_lastExecutionId": "a6da7364-e906-46e4-9e3b-dff72bb56c36"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "http://0.0.0.0:8000",
        "key": "base_url"
      }
    ],
    "info": {
      "_postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e",
      "name": "Aurite MCP Host API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "94d6dd55-9570-45e0-8580-e85502337db7",
    "values": [
      {
        "type": "any",
        "value": "http://0.0.0.0:8000",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "dfoasdfOIJDFSODFJsdjaod",
        "key": "api_key"
      }
    ]
  },
  "globals": {
    "id": "fbb37e0d-949e-4c11-93db-7c58e87795c5",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 12,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 60.5,
      "responseMin": 3,
      "responseMax": 324,
      "responseSd": 117.92193745581581,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1751955692111,
      "completed": 1751955692552
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 6,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "72577a17-78d8-4987-b514-c8fc098472df",
          "httpRequestId": "f095c40b-945b-4c95-af6f-c1607a57fa47"
        },
        "item": {
          "id": "3111d2ef-d019-4907-adb4-6bdbbfa85c19",
          "name": "Get Host Status",
          "request": {
            "url": {
              "path": [
                "host",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a9a32ae-fc28-42fd-8567-707af925b81a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('active');",
                  "});",
                  "pm.test(\"Response body has tool_count\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.tool_count).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "df90050a-3016-42ae-b9e9-9d3277c09f06"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "status"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "61197e3b-0e03-4205-9844-4ab8430044b8",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "952b877d-087a-4dd8-8659-d2215cc8a4af",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "34"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              116,
              111,
              111,
              108,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 34
        },
        "id": "3111d2ef-d019-4907-adb4-6bdbbfa85c19",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response body has correct status",
            "skipped": false
          },
          {
            "assertion": "Response body has tool_count",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1329bec3-3cb5-4219-85fa-17dd82ab38ca",
          "length": 6,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7045c03b-b386-4af5-9137-f1acad8040f7"
        },
        "item": {
          "id": "500be401-4012-4871-95f7-c51d2e6af86b",
          "name": "List Tools",
          "request": {
            "url": {
              "path": [
                "host",
                "tools"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "407a7f38-645e-47f1-ad8f-6c269e1886a6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body is an array\", function () {",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "c5d990d0-ee7b-4ffe-a9a9-9b4c1ca08ae2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "tools"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "232089a8-2326-4929-8fbe-9d168b01ef1e",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "82de5584-5701-4b61-976a-524ca7f2faa9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 2
        },
        "id": "500be401-4012-4871-95f7-c51d2e6af86b",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response body is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "52df537f-b080-4dc7-bde9-a52dbac8623c",
          "length": 6,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "150098a0-48e6-44d8-a1e9-f4a120e34172"
        },
        "item": {
          "id": "2187da33-61bf-439b-95e6-98a86455d802",
          "name": "Register Weather Server By Name",
          "request": {
            "url": {
              "path": [
                "host",
                "register",
                "weather_server"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a5fcb48-247e-45ce-90b8-2b13e1748e18",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "    pm.expect(jsonData.name).to.eql('weather_server');",
                  "});"
                ],
                "_lastExecutionId": "68a9fcc0-80b4-420e-a554-6bbe59331d0b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "register",
              "weather_server"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "710afdb2-cee1-466b-8638-b984ecd14bab",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST"
        },
        "response": {
          "id": "1ced21a5-bedc-48e1-a8ad-ad53fd04e82b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "44"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              119,
              101,
              97,
              116,
              104,
              101,
              114,
              95,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 324,
          "responseSize": 44
        },
        "id": "2187da33-61bf-439b-95e6-98a86455d802",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response body has correct status",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "691d2b8f-2f3c-48a8-b52c-38996db436dc",
          "length": 6,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee9c0987-878a-4ccc-99ed-f8aa453769ab"
        },
        "item": {
          "id": "b85aaf6a-9d8f-43ce-bba5-83ce0c511a29",
          "name": "Call Weather Lookup Tool",
          "request": {
            "url": {
              "path": [
                "host",
                "tools",
                "weather_lookup",
                "call"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d58bcba9-cee8-4458-bc50-1f63ea9ab548",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct content\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.content[0].text).to.include('Weather for San Francisco');",
                  "});"
                ],
                "_lastExecutionId": "4f02586f-e862-4ca1-b42c-a24d18a040ca"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "tools",
              "weather_lookup",
              "call"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1135843a-1a2b-480b-947a-da4cf34cd713",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "59",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "23249883-1462-46aa-a20d-2cedc9c435c3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "181"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              116,
              97,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              87,
              101,
              97,
              116,
              104,
              101,
              114,
              32,
              102,
              111,
              114,
              32,
              83,
              97,
              110,
              32,
              70,
              114,
              97,
              110,
              99,
              105,
              115,
              99,
              111,
              58,
              32,
              84,
              101,
              109,
              112,
              32,
              49,
              56,
              194,
              176,
              67,
              44,
              32,
              70,
              111,
              103,
              103,
              121,
              44,
              32,
              72,
              117,
              109,
              105,
              100,
              105,
              116,
              121,
              32,
              56,
              53,
              37,
              34,
              44,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              116,
              97,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              44,
              34,
              115,
              116,
              114,
              117,
              99,
              116,
              117,
              114,
              101,
              100,
              67,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 181
        },
        "id": "b85aaf6a-9d8f-43ce-bba5-83ce0c511a29",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response body has correct content",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "36ba562b-8bb5-475f-88b6-f337abdca847",
          "length": 6,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8d87ee7-c267-4452-9f01-55eff37cffaf"
        },
        "item": {
          "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
          "name": "Unregister Weather Server",
          "request": {
            "url": {
              "path": [
                "host",
                "servers",
                "weather_server"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "    pm.expect(jsonData.name).to.eql('weather_server');",
                  "});"
                ],
                "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "servers",
              "weather_server"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1ab541ed-0710-4266-a350-ec5fc37de3af",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "441ad1e3-3788-4120-8df5-62d58c89dc28",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "86"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              65,
              116,
              116,
              101,
              109,
              112,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              101,
              120,
              105,
              116,
              32,
              99,
              97,
              110,
              99,
              101,
              108,
              32,
              115,
              99,
              111,
              112,
              101,
              32,
              105,
              110,
              32,
              97,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              32,
              116,
              97,
              115,
              107,
              32,
              116,
              104,
              97,
              110,
              32,
              105,
              116,
              32,
              119,
              97,
              115,
              32,
              101,
              110,
              116,
              101,
              114,
              101,
              100,
              32,
              105,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 86
        },
        "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response body has correct status",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response body has correct status",
              "message": "expected undefined to deeply equal 'success'",
              "stack": "AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4c1be85-6c22-4cf6-9dd9-a3dc1c7e2490",
          "length": 6,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c24aed75-06d4-49ba-9a67-e791a0a29c1e"
        },
        "item": {
          "id": "abeca92a-d43d-44e2-ace2-b2f19ed67d7f",
          "name": "Call Weather Lookup Tool (After Unregister)",
          "request": {
            "url": {
              "path": [
                "host",
                "tools",
                "weather_lookup",
                "call"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "246afd52-df42-4865-83aa-681a28f1dcd2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "a6da7364-e906-46e4-9e3b-dff72bb56c36"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "host",
              "tools",
              "weather_lookup",
              "call"
            ],
            "host": [
              "0",
              "0",
              "0",
              "0"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-API-Key",
              "value": "dfoasdfOIJDFSODFJsdjaod"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7be93cb5-35b7-45ff-9cea-1cd509d53cd9",
              "system": true
            },
            {
              "key": "Host",
              "value": "0.0.0.0:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "59",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9a350f23-b0db-4e08-9149-4d188f3b0416",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "date",
              "value": "Tue, 08 Jul 2025 06:21:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "45"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              84,
              111,
              111,
              108,
              32,
              39,
              119,
              101,
              97,
              116,
              104,
              101,
              114,
              95,
              108,
              111,
              111,
              107,
              117,
              112,
              39,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 45
        },
        "id": "abeca92a-d43d-44e2-ace2-b2f19ed67d7f",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 392
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 500",
          "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "9a16cb8ec6b2e35f5c0945037791ce6c",
          "id": "703446db-3e8c-4ac2-92c2-6d3127e18c77",
          "timestamp": 1751955692533,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
          "name": "Unregister Weather Server",
          "request": {
            "url": {
              "path": [
                "host",
                "servers",
                "weather_server"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "    pm.expect(jsonData.name).to.eql('weather_server');",
                  "});"
                ],
                "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e"
          },
          "item": [
            {
              "id": "3111d2ef-d019-4907-adb4-6bdbbfa85c19",
              "name": "Get Host Status",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8a9a32ae-fc28-42fd-8567-707af925b81a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('active');",
                      "});",
                      "pm.test(\"Response body has tool_count\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.tool_count).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "df90050a-3016-42ae-b9e9-9d3277c09f06"
                  }
                }
              ]
            },
            {
              "id": "500be401-4012-4871-95f7-c51d2e6af86b",
              "name": "List Tools",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "407a7f38-645e-47f1-ad8f-6c269e1886a6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body is an array\", function () {",
                      "    pm.response.to.be.withBody;",
                      "    pm.response.to.be.json;",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "c5d990d0-ee7b-4ffe-a9a9-9b4c1ca08ae2"
                  }
                }
              ]
            },
            {
              "id": "2187da33-61bf-439b-95e6-98a86455d802",
              "name": "Register Weather Server By Name",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "register",
                    "weather_server"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a5fcb48-247e-45ce-90b8-2b13e1748e18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('success');",
                      "    pm.expect(jsonData.name).to.eql('weather_server');",
                      "});"
                    ],
                    "_lastExecutionId": "68a9fcc0-80b4-420e-a554-6bbe59331d0b"
                  }
                }
              ]
            },
            {
              "id": "b85aaf6a-9d8f-43ce-bba5-83ce0c511a29",
              "name": "Call Weather Lookup Tool",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools",
                    "weather_lookup",
                    "call"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d58bcba9-cee8-4458-bc50-1f63ea9ab548",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct content\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.content[0].text).to.include('Weather for San Francisco');",
                      "});"
                    ],
                    "_lastExecutionId": "4f02586f-e862-4ca1-b42c-a24d18a040ca"
                  }
                }
              ]
            },
            {
              "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
              "name": "Unregister Weather Server",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "servers",
                    "weather_server"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('success');",
                      "    pm.expect(jsonData.name).to.eql('weather_server');",
                      "});"
                    ],
                    "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
                  }
                }
              ]
            },
            {
              "id": "abeca92a-d43d-44e2-ace2-b2f19ed67d7f",
              "name": "Call Weather Lookup Tool (After Unregister)",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools",
                    "weather_lookup",
                    "call"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "246afd52-df42-4865-83aa-681a28f1dcd2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ],
                    "_lastExecutionId": "a6da7364-e906-46e4-9e3b-dff72bb56c36"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "http://0.0.0.0:8000",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e",
            "name": "Aurite MCP Host API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "36ba562b-8bb5-475f-88b6-f337abdca847",
          "length": 6,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8d87ee7-c267-4452-9f01-55eff37cffaf",
          "scriptId": "45519129-b5d8-4477-93d1-14820d1c7e74",
          "execution": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response body has correct status",
          "message": "expected undefined to deeply equal 'success'",
          "stack": "AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "c919046eb58fc701dc39760ae09816b7",
          "id": "24ddb731-1c28-432e-bb86-e2f26ca42e16",
          "timestamp": 1751955692535,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
          "name": "Unregister Weather Server",
          "request": {
            "url": {
              "path": [
                "host",
                "servers",
                "weather_server"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response body has correct status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "    pm.expect(jsonData.name).to.eql('weather_server');",
                  "});"
                ],
                "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e"
          },
          "item": [
            {
              "id": "3111d2ef-d019-4907-adb4-6bdbbfa85c19",
              "name": "Get Host Status",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "status"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8a9a32ae-fc28-42fd-8567-707af925b81a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('active');",
                      "});",
                      "pm.test(\"Response body has tool_count\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.tool_count).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "df90050a-3016-42ae-b9e9-9d3277c09f06"
                  }
                }
              ]
            },
            {
              "id": "500be401-4012-4871-95f7-c51d2e6af86b",
              "name": "List Tools",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "407a7f38-645e-47f1-ad8f-6c269e1886a6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body is an array\", function () {",
                      "    pm.response.to.be.withBody;",
                      "    pm.response.to.be.json;",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "c5d990d0-ee7b-4ffe-a9a9-9b4c1ca08ae2"
                  }
                }
              ]
            },
            {
              "id": "2187da33-61bf-439b-95e6-98a86455d802",
              "name": "Register Weather Server By Name",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "register",
                    "weather_server"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a5fcb48-247e-45ce-90b8-2b13e1748e18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('success');",
                      "    pm.expect(jsonData.name).to.eql('weather_server');",
                      "});"
                    ],
                    "_lastExecutionId": "68a9fcc0-80b4-420e-a554-6bbe59331d0b"
                  }
                }
              ]
            },
            {
              "id": "b85aaf6a-9d8f-43ce-bba5-83ce0c511a29",
              "name": "Call Weather Lookup Tool",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools",
                    "weather_lookup",
                    "call"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d58bcba9-cee8-4458-bc50-1f63ea9ab548",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct content\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.content[0].text).to.include('Weather for San Francisco');",
                      "});"
                    ],
                    "_lastExecutionId": "4f02586f-e862-4ca1-b42c-a24d18a040ca"
                  }
                }
              ]
            },
            {
              "id": "651d86df-fa52-401a-a248-06dcc3c9c895",
              "name": "Unregister Weather Server",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "servers",
                    "weather_server"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "45519129-b5d8-4477-93d1-14820d1c7e74",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body has correct status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql('success');",
                      "    pm.expect(jsonData.name).to.eql('weather_server');",
                      "});"
                    ],
                    "_lastExecutionId": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
                  }
                }
              ]
            },
            {
              "id": "abeca92a-d43d-44e2-ace2-b2f19ed67d7f",
              "name": "Call Weather Lookup Tool (After Unregister)",
              "request": {
                "url": {
                  "path": [
                    "host",
                    "tools",
                    "weather_lookup",
                    "call"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"args\": {\n        \"location\": \"San Francisco\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "246afd52-df42-4865-83aa-681a28f1dcd2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ],
                    "_lastExecutionId": "a6da7364-e906-46e4-9e3b-dff72bb56c36"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "any",
              "value": "http://0.0.0.0:8000",
              "key": "base_url"
            }
          ],
          "info": {
            "_postman_id": "b8f5f2e8-e2a1-4f5d-b0f2-2e1b1f3b3b1e",
            "name": "Aurite MCP Host API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "36ba562b-8bb5-475f-88b6-f337abdca847",
          "length": 6,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8d87ee7-c267-4452-9f01-55eff37cffaf",
          "scriptId": "45519129-b5d8-4477-93d1-14820d1c7e74",
          "execution": "c144a8f0-04b0-412b-bf14-2a1198556fd8"
        }
      }
    ],
    "error": null
  }
}