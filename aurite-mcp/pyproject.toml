[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
[project]
name = "aurite-mcp"
version = "0.1.0"
description = "Aurite MCP implementation"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "mcp>=1.4.1",
    "httpx>=0.28.1",
    "anyio>=4.8.0",
    "sqlalchemy>=2.0.39",
    "anthropic>=0.49.0",
    "annotated-types>=0.7.0",
    "certifi>=2025.1.31",
    "cffi>=1.17.1",
    "click>=8.1.8",
    "cryptography>=44.0.2",
    "distro>=1.9.0",
    "greenlet>=3.1.1",
    "h11>=0.14.0",
    "httpcore>=1.0.7",
    "httpx-sse>=0.4.0",
    "idna>=3.10",
    "iniconfig>=2.0.0",
    "jiter>=0.9.0",
    "numpy>=2.2.3",
    "packaging>=24.2",
    "pandas>=2.2.3",
    "pluggy>=1.5.0",
    "psycopg2-binary>=2.9.10",
    "pycparser>=2.22",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "pydantic_core>=2.27.2",
    "PyMySQL>=1.1.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "python-dateutil>=2.9.0.post0",
    "python-dotenv>=1.0.1",
    "pytz>=2025.1",
    "six>=1.17.0",
    "sniffio>=1.3.1",
    "sse-starlette>=2.2.1",
    "starlette>=0.46.1",
    "typing_extensions>=4.12.2",
    "tzdata>=2025.1",
    "uvicorn>=0.34.0",
]
[tool.setuptools.package-data]
"*" = ["py.typed"]
[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
namespaces = false
# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
log_cli = true
log_cli_level = "INFO"
markers = [
    "unit: mark test as unit test",
    "integration: mark test as integration test",
    "e2e: mark test as end-to-end test",
    "asyncio: mark test as async test",
    "core: mark test as core functionality test",
    "user: mark test as requiring user credentials",
    "extended: mark test as extended functionality test",
    "agent: mark test as agent test",
    "infrastructure: mark test as infrastructure/setup verification",
]
pythonpath = [".", "src"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::RuntimeWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestUnknownMarkWarning",
    "ignore::pytest.PytestConfigWarning",
    "ignore::pytest.PytestUnhandledCoroutineWarning",
]
[project.scripts]
mcp-server = "src.servers.server:main"