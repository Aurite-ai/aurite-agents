{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-1234-abcdef123456",
    "name": "Aurite MCP Server",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection for testing the Aurite MCP FastAPI server endpoints."
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Checks if the server is running and responsive."
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response body is correct\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.eql({status: 'ok'});",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ]
    },
    {
      "name": "Get Status",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "X-API-Key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{base_url}}/status",
          "host": ["{{base_url}}"],
          "path": ["status"]
        },
        "description": "Checks the initialization status of the MCP Host (requires API Key)."
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response body indicates initialized\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.eql({status: 'initialized'});",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ]
    },
    {
      "name": "Prepare Prompt",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "X-API-Key",
            "value": "{{api_key}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"prompt_name\": \"create_plan_prompt\",\n    \"prompt_arguments\": {},\n    \"client_id\": \"planning\",\n    \"tool_names\": null\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/prepare_prompt",
          "host": ["{{base_url}}"],
          "path": ["prepare_prompt"]
        },
        "description": "Prepares a prompt and associated tools (requires API Key)."
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has system prompt and tools\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('system');",
              "    pm.expect(jsonData).to.have.property('tools');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ]
    },
    {
      "name": "Execute Prompt",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "X-API-Key",
            "value": "{{api_key}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"prompt_name\": \"create_plan_prompt\",\n    \"prompt_arguments\": {},\n    \"client_id\": \"planning\",\n    \"user_message\": \"Create a plan to test this API.\",\n    \"tool_names\": null,\n    \"model\": \"claude-3-haiku-20240307\",\n    \"max_tokens\": 150,\n    \"temperature\": 0.5\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/execute_prompt",
          "host": ["{{base_url}}"],
          "path": ["execute_prompt"]
        },
        "description": "Executes a prompt with tools and user message (requires API Key)."
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has final_response\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('final_response');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string",
      "description": "Base URL of the running FastAPI server"
    }
  ]
}
